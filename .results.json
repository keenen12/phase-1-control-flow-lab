{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 4,
    "pending": 0,
    "failures": 5,
    "start": "2022-12-14T07:26:48.233Z",
    "end": "2022-12-14T07:26:48.381Z",
    "duration": 148
  },
  "tests": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 20 dollars for a distance between 400 and 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 20 dollars for a distance between 400 and 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: ternaryCheckCity is not a function\n    at Context.<anonymous> (test/indexTest.js:22:14)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "ternaryCheckCity is not a function"
      }
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: ternaryCheckCity is not a function\n    at Context.<anonymous> (test/indexTest.js:26:14)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "ternaryCheckCity is not a function"
      }
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:32:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:36:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:40:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: ternaryCheckCity is not a function\n    at Context.<anonymous> (test/indexTest.js:22:14)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "ternaryCheckCity is not a function"
      }
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: ternaryCheckCity is not a function\n    at Context.<anonymous> (test/indexTest.js:26:14)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "ternaryCheckCity is not a function"
      }
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:32:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:36:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: switchOnCharmFromTip is not defined\n    at Context.<anonymous> (test/indexTest.js:40:7)\n    at processImmediate (node:internal/timers:466:21)",
        "message": "switchOnCharmFromTip is not defined"
      }
    }
  ],
  "passes": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 20 dollars for a distance between 400 and 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 20 dollars for a distance between 400 and 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}